//---------------------------------------------------------
//担当者：二宮怜
//内容　：playerの動作に必要なステータスを管理
//　　　：唯一PlayerInputとやり取りできる
//---------------------------------------------------------
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerInputManager : MonoBehaviour
{
    //----------------------------------------------------------------------------------------------------------
    // - 変数宣言 -

    // 移動用
    private Vector2 movement; // 入力量を取得する変数

    //ジャンプ用
    [Header("ジャンプ中")]
    public bool IsJump = false; // 現在ジャンプボタンが押されているか
    [Header("")]
    [SerializeField] bool JumpTrigger = false; // ジャンプ入力離さないと二回目以降ジャンプしないようにする

    //ひび生成用
    private Vector2 CrackPower; //ひびを入れる強さ

    //ひびの移動用
    public bool CrackMoveflg = false; //ひびの移動開始フラグ

    //右スティック
    private Vector2 R_move;

    //----------------------------------------------------------------------------------------------------------
    // - ゲッター ・ セッター -

    //----------------------------------------------------------------------------------------------------------
    // 移動
    //--------------------------------------------
        //戻り値：Vector2型（デバイス入力による入力量）
        //引数　：無し
        public Vector2 GetMovement()
        {
            return movement;
        }

        //--------------------------------------------
        //戻り値：無し
        //引数　：Vector2型（デバイス入力による入力量）
        public void SetMovement(Vector2 _move)
        {
            movement = _move;
        }

    //----------------------------------------------------------------------------------------------------------
    // ジャンプ
    //----------------------------------------------------------------------------------------------------------
    //戻り値：bool型（ジャンプの入力がされているか）
    //引数　：なし
    public bool GetJump()
    {
        return IsJump;
    }

    //戻り値：無し
    //引数　：bool型（ジャンプの入力がされているか）
    public void SetJump(bool _TRUEorFalse)
    {
        IsJump = _TRUEorFalse;
    }

    //----------------------------------------------------------------------------------------------------------
    //戻り値：bool型（ジャンプの入力がされているか）
    //引数　：なし
    public bool GetJumpTrigger()
    {
        return JumpTrigger;
    }

    public void SetJumpTrigger(bool _TRUEorFALSE)
    {
        JumpTrigger = _TRUEorFALSE;
    }

    //----------------------------------------------------------------------------------------------------------
    // 右スティックの入力量
    //----------------------------------------------------------------------------------------------------------

    //戻り値：Vector2型（デバイス入力による入力量）
    //引数　：無し
    public Vector2 GetRmove()
    {
        return R_move;
    }

    //戻り値：無し
    //引数　：Vector2型（デバイス入力による入力量）
    public void SetRmove(Vector2 _R_move)
    {
        R_move = _R_move;
    }

    //----------------------------------------------------------------------------------------------------------
    // ひび
    //----------------------------------------------------------------------------------------------------------

    //戻り値：Vector2型（デバイス入力による入力量）
    //引数　：無し
    public Vector2 GetCarackPower()
    {
        return CrackPower;
    }

    //戻り値：無し
    //引数　：Vector2型（デバイス入力による入力量）
    public void SetCrackPower(Vector2 _CrackPower)
    {
        CrackPower = _CrackPower;
    }

    //----------------------------------------------------------------------------------------------------------
    // ひびの移動
    //----------------------------------------------------------------------------------------------------------
    //戻り値：bool型(ひびに入っているか)
    //引数　：なし
    public bool GetCrackMove()
    {
        return CrackMoveflg;
    }

    //戻り値：無し
    //引数　：bool型(ひびに入っているか)
    public void SetCrackMove(bool _CrackMoveflg)
    {
        CrackMoveflg = _CrackMoveflg;
    }

}
